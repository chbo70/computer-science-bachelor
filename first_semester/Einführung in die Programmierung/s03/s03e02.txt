## a)

+---------------------------+----------------------------+
| Fragment                  | C-Datentyp                 |
+===========================+============================+
| 5 == 3                    |bool, int                   |
+---------------------------+----------------------------+
| 2.0 * 4 / 5               |double                      |
+---------------------------+----------------------------+
| 41 / (float)17            |float                       |
+---------------------------+----------------------------+
| 5.0e-2 * .02f             |double                      |
+---------------------------+----------------------------+
| 0xC0DE                    |int                         |
+---------------------------+----------------------------+
| 0.1f == 0.1               |int durch rundung 0         |
+---------------------------+----------------------------+
| 'E' + 'A' + 'S' + 'Y'     |int                         |
+---------------------------+----------------------------+
| INT_MAX & 0xFFFF          |int +2147483647             |
+---------------------------+----------------------------+
| 12 | 5 ^ 4 & 3            |int, logische Op            |
+---------------------------+----------------------------+
| 0xBull                    |unsigned long long          |
+---------------------------+----------------------------+

INT_MAX = 2147483647
## b)

+---------------------------+----------------------------+
| Fragment                  | Resultat (Basis 10)        |
+===========================+============================+
| 0xFF                      |255                         |
+---------------------------+----------------------------+
| 2.0f * 017                |30                          |
+---------------------------+----------------------------+
| 0.1f + 0.2f == 0.3        |0                           |
+---------------------------+----------------------------+
| (1 << 1) & 3              |2                           |
+---------------------------+----------------------------+
| (1 + DBL_MAX) / DBL_MAX   |1                           |
+---------------------------+----------------------------+


## c)

1. ((6 == (13 % 7)) && (0 != 1)) //klammer und links assoziativ, äußere klammer und abschließend &&

2. (((16 >> 1) == 8) || (0 != 1)) // klammern ausgewertet, vergleich links und dann && mit linker und rechter ausdruck

3. ((('D') - ('B')) == 3) ? 0 : 1 //zuerst werden die Chars -> ints dann berechnet und mit 3 verglichen und falls der bool wahr ist wird 1 ausgegeben sonst 0

4. double x = (((sizeof(float)) * 2) && ((25 / printf("abc\n")) ^ (2 + 1)));
// sizeof(float) und 2+1
// 4 * 2 und 25 / printf("abc\n")
// 8 && "abc\n" 216
// double x = 1
5. ((1 + 2) - ((3 * 5) / 2)) & 4